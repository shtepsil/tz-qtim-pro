//! pretty-print-json v1.2.3 ~~ https://pretty-print-json.js.org ~~ MIT License
function _typeof(a) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) { return typeof a } : function (a) { return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a }, _typeof(a) } function _toConsumableArray(a) { return _arrayWithoutHoles(a) || _iterableToArray(a) || _unsupportedIterableToArray(a) || _nonIterableSpread() } function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _unsupportedIterableToArray(a, b) { if (a) { if ("string" == typeof a) return _arrayLikeToArray(a, b); var c = Object.prototype.toString.call(a).slice(8, -1); return "Object" === c && a.constructor && (c = a.constructor.name), "Map" === c || "Set" === c ? Array.from(a) : "Arguments" === c || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c) ? _arrayLikeToArray(a, b) : void 0 } } function _iterableToArray(a) { if ("undefined" != typeof Symbol && null != a[Symbol.iterator] || null != a["@@iterator"]) return Array.from(a) } function _arrayWithoutHoles(a) { if (Array.isArray(a)) return _arrayLikeToArray(a) } function _arrayLikeToArray(a, b) { (null == b || b > a.length) && (b = a.length); for (var c = 0, d = Array(b); c < b; c++)d[c] = a[c]; return d } function ownKeys(a, b) { var c = Object.keys(a); if (Object.getOwnPropertySymbols) { var d = Object.getOwnPropertySymbols(a); b && (d = d.filter(function (b) { return Object.getOwnPropertyDescriptor(a, b).enumerable })), c.push.apply(c, d) } return c } function _objectSpread(a) { for (var b, c = 1; c < arguments.length; c++)b = null == arguments[c] ? {} : arguments[c], c % 2 ? ownKeys(Object(b), !0).forEach(function (c) { _defineProperty(a, c, b[c]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : ownKeys(Object(b)).forEach(function (c) { Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c)) }); return a } function _defineProperty(a, b, c) { return b in a ? Object.defineProperty(a, b, { value: c, enumerable: !0, configurable: !0, writable: !0 }) : a[b] = c, a } var prettyPrintJson = { version: "1.2.3", toHtml: function toHtml(a, b) { var c = _objectSpread(_objectSpread({}, { indent: 3, lineNumbers: !1, linkUrls: !0, quoteKeys: !1 }), b), d = function (a, b) { return b ? "<span class=json-" + a + ">" + b + "</span>" : "" }, e = function (a) { var b = /^"/.test(a) && "string", e = ["true", "false"].includes(a) && "boolean", f = b && c.linkUrls ? a.replace(/https?:\/\/[^\s"]+/g, function makeLink(a) { return "<a class=json-link href=\"" + a + "\">" + a + "</a>" }) : a; return d(e || "null" === a && "null" || b || "number", f) }, f = JSON.stringify(a, null, c.indent) || "undefined", g = function htmlEntities(a) { return a.replace(/&/g, "&amp;").replace(/\\"/g, "&bsol;&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;") }(f).replace(/^( *)("[^"]+": )?("[^"]*"|[\w.+-]*)?([{}[\],]*)?$/mg, function replacer(a, b, f, g, h) { var i = { indent: b, key: f, value: g, end: h }, j = c.quoteKeys ? /(.*)(): / : /"([\w$]+)": |(.*): /, k = i.indent || "", l = i.key && i.key.replace(j, "$1$2"), m = i.key ? d("key", l) + d("mark", ": ") : "", n = i.value ? e(i.value) : "", o = d("mark", i.end); return k + m + n + o }), h = function (a) { return "   <li>".concat(a, "</li>") }; return c.lineNumbers ? function addLineNumbers(a) { return ["<ol class=json-lines>"].concat(_toConsumableArray(a.split("\n").map(h)), ["</ol>"]).join("\n") }(g) : g } }; "object" === ("undefined" == typeof window ? "undefined" : _typeof(window)) && (window.prettyPrintJson = prettyPrintJson);